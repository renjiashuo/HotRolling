生成启动时间为 2017/6/20 16:31:34。
     1>项目“C:\Users\wsgbcsc\Documents\GitHub\HotRolling\HotRolling\HotRolling.vcxproj”在节点 2 上(Rebuild 个目标)。
     1>ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\CL.exe /c /IC:\Users\wsgbcsc\Documents\GitHub\HotRolling\HotRolling\include /ZI /nologo /W3 /WX- /sdl /Od /Oy- /D _CRT_SECURE_NO_WARNINGS /D _MBCS /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"Debug\\" /Fd"Debug\vc120.pdb" /Gd /TP /analyze- /errorReport:prompt datacheck.cpp Group.cpp localsearch.cpp localsearch1.cpp localsearch2.cpp localsearch3.cpp localsearch4.cpp main.cpp readdate.cpp SteelCoil.cpp tangguncai.cpp TortoiseShell.cpp TortoiseShell_rule.cpp zhuticai.cpp
         zhuticai.cpp
         TortoiseShell_rule.cpp
         TortoiseShell.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(62): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(486): warning C4018: “<=”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(539): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(546): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(556): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(563): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(571): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(578): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(585): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(592): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(664): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(674): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(677): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(738): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(749): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(758): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(774): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(840): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(850): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(853): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(914): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(925): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(933): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(941): warning C4244: “+=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(1000): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits(475): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<double,unsigned int,void>(std::pair<double,unsigned int> &&)”的引用
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(193): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<double,unsigned int,void>(std::pair<double,unsigned int> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(149): 参见对正在编译的类 模板 实例化“std::is_convertible<_Other1,_Ty1>”的引用
                 with
                 [
                     _Other1=std::pair<double,unsigned int>
         ,            _Ty1=std::pair<int,int>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\tortoiseshell.cpp(191): 参见对正在编译的类 模板 实例化“std::is_convertible<std::pair<std::pair<double,unsigned int>,Group *>,std::pair<const _Kty,_Ty>>”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
         tangguncai.cpp
         SteelCoil.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\steelcoil.cpp(34): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\steelcoil.cpp(36): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\steelcoil.cpp(37): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
         readdate.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\readdate.cpp(27): warning C4800: “int”: 将值强制为布尔值“true”或“false”(性能警告)
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\readdate.cpp(38): warning C4800: “int”: 将值强制为布尔值“true”或“false”(性能警告)
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\readdate.cpp(198): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\readdate.cpp(201): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
         main.cpp
         localsearch4.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(47): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(65): warning C4018: “<=”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(180): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(247): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(163): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch4.cpp(163): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
         localsearch3.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(17): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(23): warning C4018: “<=”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(87): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(174): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(252): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(70): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch3.cpp(70): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
         localsearch2.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch2.cpp(71): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch2.cpp(54): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch2.cpp(54): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
         localsearch1.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(42): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(58): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(72): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(73): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(104): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(117): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(118): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(310): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(376): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(555): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(18): warning C4101: “Another_Position_No”: 未引用的局部变量
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(308): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch1.cpp(308): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
         localsearch.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(45): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(62): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(76): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(77): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(83): warning C4018: “<=”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(131): warning C4018: “<”: 有符号/无符号不匹配
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(144): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(145): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(336): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(402): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(581): warning C4244: “=”: 从“double”转换到“int”，可能丢失数据
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(18): warning C4101: “Another_Position_No”: 未引用的局部变量
     1>c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility(157): 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,double,void>(std::pair<int,double> &&)”的引用
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(600): 参见对正在编译的函数 模板 实例化“std::pair<const _Kty,_Ty>::pair<std::pair<int,double>,Group*,void>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(723): 参见对正在编译的函数 模板 实例化“void std::allocator<_Other>::construct<_Objty,_Ty>(_Objty *,_Ty &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
         ,            _Ty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0(872): 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(std::allocator<_Other> &,_Objty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Alloc=std::allocator<std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
         ,            _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Objty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(933): 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Other>>::construct<_Ty,std::pair<std::pair<int,double>,Group *>>(_Ty *,std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Other=std::_Tree_node<std::pair<const std::pair<int,int>,Group *>,void *>
         ,            _Ty=std::pair<const std::pair<int,int>,Group *>
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\program files (x86)\microsoft visual studio 12.0\vc\include\xtree(1158): 参见对正在编译的函数 模板 实例化“std::_Tree_node<std::pair<const _Kty,_Ty>,void *> *std::_Tree_buy<std::pair<const _Kty,_Ty>,std::allocator<std::pair<const _Kty,_Ty>>>::_Buynode<std::pair<std::pair<int,double>,Group *>>(std::pair<std::pair<int,double>,Group *> &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(334): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
                 c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\localsearch.cpp(334): 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::insert<std::pair<std::pair<int,double>,Group *>>(_Valty &&)”的引用
                 with
                 [
                     _Kty=std::pair<int,int>
         ,            _Ty=Group *
         ,            _Pr=std::less<std::pair<int,int>>
         ,            _Alloc=std::allocator<std::pair<const std::pair<int,int>,Group *>>
         ,            _Valty=std::pair<std::pair<int,double>,Group *>
                 ]
         Group.cpp
     1>c:\users\wsgbcsc\documents\github\hotrolling\hotrolling\group.cpp(41): warning C4018: “<”: 有符号/无符号不匹配
         datacheck.cpp
         正在生成代码...
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"C:\Users\wsgbcsc\Documents\GitHub\HotRolling\Debug\HotRolling.exe" /INCREMENTAL /NOLOGO /LIBPATH:C:\Users\wsgbcsc\Documents\GitHub\HotRolling\HotRolling\lib32 ociliba.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:\Users\wsgbcsc\Documents\GitHub\HotRolling\Debug\HotRolling.pdb" /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:\Users\wsgbcsc\Documents\GitHub\HotRolling\Debug\HotRolling.lib" /MACHINE:X86 Debug\datacheck.obj
         Debug\Group.obj
         Debug\localsearch.obj
         Debug\localsearch1.obj
         Debug\localsearch2.obj
         Debug\localsearch3.obj
         Debug\localsearch4.obj
         Debug\main.obj
         Debug\readdate.obj
         Debug\SteelCoil.obj
         Debug\tangguncai.obj
         Debug\TortoiseShell.obj
         Debug\TortoiseShell_rule.obj
         Debug\zhuticai.obj
         HotRolling.vcxproj -> C:\Users\wsgbcsc\Documents\GitHub\HotRolling\Debug\HotRolling.exe
     1>已完成生成项目“C:\Users\wsgbcsc\Documents\GitHub\HotRolling\HotRolling\HotRolling.vcxproj”(Rebuild 个目标)的操作。

生成成功。

已用时间 00:00:28.60
